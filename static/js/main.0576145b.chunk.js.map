{"version":3,"sources":["redux/blockchain/blockchainReducer.js","redux/data/dataReducer.js","redux/store.js","redux/data/dataActions.js","redux/blockchain/blockchainActions.js","styles/globalStyles.js","App.js","reportWebVitals.js","index.js"],"names":["initialState","loading","account","smartContract","web3","errorMsg","blockchainReducer","state","action","type","payload","totalSupply","cost","error","dataReducer","rootReducer","combineReducers","blockchain","data","middleware","thunk","composeEnhancers","compose","applyMiddleware","store","createStore","fetchDataFailed","fetchData","dispatch","a","getState","methods","call","console","log","connectFailed","updateAccount","Screen","styled","div","image","SpacerXSmall","SpacerSmall","SpacerMedium","SpacerLarge","Container","flex","fd","jc","ai","test","TextTitle","p","TextSubTitle","TextDescription","StyledButton","button","StyledRoundButton","ResponsiveWrapper","StyledLogo","img","StyledLogoFooter","StyledLink","App","useDispatch","useSelector","useState","claimingNft","setClaimingNft","feedback","setFeedback","mintAmount","setMintAmount","CONTRACT_ADDRESS","SCAN_LINK","NETWORK","NAME","SYMBOL","ID","NFT_NAME","MAX_SUPPLY","WEI_COST","DISPLAY_COST","GAS_LIMIT","MARKETPLACE","MARKETPLACE_LINK","SHOW_BACKGROUND","CONFIG","SET_CONFIG","getData","getConfig","fetch","headers","Accept","configResponse","json","config","useEffect","style","padding","backgroundColor","marginBottom","background","height","alt","src","borderRadius","marginTop","border","boxShadow","textAlign","color","fontSize","Number","target","href","onClick","e","preventDefault","abiResponse","abi","window","ethereum","isMetaMask","Web3EthContract","setProvider","Web3","request","method","accounts","SmartContractObj","on","location","reload","lineHeight","disabled","newMintAmount","decrementMintAmount","incrementMintAmount","gasLimit","totalCostWei","String","totalGasLimit","mint","send","to","from","value","once","err","then","receipt","claimNFTs","textDecoration","margin","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0576145b.chunk.js","sourcesContent":["const initialState = {\r\n  loading: false,\r\n  account: null,\r\n  smartContract: null,\r\n  web3: null,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst blockchainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CONNECTION_REQUEST\":\r\n      return {\r\n        ...initialState,\r\n        loading: true,\r\n      };\r\n    case \"CONNECTION_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        account: action.payload.account,\r\n        smartContract: action.payload.smartContract,\r\n        web3: action.payload.web3,\r\n      };\r\n    case \"CONNECTION_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        errorMsg: action.payload,\r\n      };\r\n    case \"UPDATE_ACCOUNT\":\r\n      return {\r\n        ...state,\r\n        account: action.payload.account,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default blockchainReducer;\r\n","const initialState = {\r\n  loading: false,\r\n  totalSupply: 0,\r\n  cost: 0,\r\n  error: false,\r\n  errorMsg: \"\",\r\n};\r\n\r\nconst dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"CHECK_DATA_REQUEST\":\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_SUCCESS\":\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        totalSupply: action.payload.totalSupply,\r\n        // cost: action.payload.cost,\r\n        error: false,\r\n        errorMsg: \"\",\r\n      };\r\n    case \"CHECK_DATA_FAILED\":\r\n      return {\r\n        ...initialState,\r\n        loading: false,\r\n        error: true,\r\n        errorMsg: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dataReducer;\r\n","import { applyMiddleware, compose, createStore, combineReducers } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport blockchainReducer from \"./blockchain/blockchainReducer\";\r\nimport dataReducer from \"./data/dataReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  blockchain: blockchainReducer,\r\n  data: dataReducer,\r\n});\r\n\r\nconst middleware = [thunk];\r\nconst composeEnhancers = compose(applyMiddleware(...middleware));\r\n\r\nconst configureStore = () => {\r\n  return createStore(rootReducer, composeEnhancers);\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nexport default store;\r\n","// log\r\nimport store from \"../store\";\r\n\r\nconst fetchDataRequest = () => {\r\n  return {\r\n    type: \"CHECK_DATA_REQUEST\",\r\n  };\r\n};\r\n\r\nconst fetchDataSuccess = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst fetchDataFailed = (payload) => {\r\n  return {\r\n    type: \"CHECK_DATA_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const fetchData = () => {\r\n  return async (dispatch) => {\r\n    dispatch(fetchDataRequest());\r\n    try {\r\n      let totalSupply = await store\r\n        .getState()\r\n        .blockchain.smartContract.methods.totalSupply()\r\n        .call();\r\n      // let cost = await store\r\n      //   .getState()\r\n      //   .blockchain.smartContract.methods.cost()\r\n      //   .call();\r\n\r\n      dispatch(\r\n        fetchDataSuccess({\r\n          totalSupply,\r\n          // cost,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(fetchDataFailed(\"Could not load data from contract.\"));\r\n    }\r\n  };\r\n};\r\n","// constants\r\nimport Web3EthContract from \"web3-eth-contract\";\r\nimport Web3 from \"web3\";\r\n// log\r\nimport { fetchData } from \"../data/dataActions\";\r\n\r\nconst connectRequest = () => {\r\n  return {\r\n    type: \"CONNECTION_REQUEST\",\r\n  };\r\n};\r\n\r\nconst connectSuccess = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_SUCCESS\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst connectFailed = (payload) => {\r\n  return {\r\n    type: \"CONNECTION_FAILED\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nconst updateAccountRequest = (payload) => {\r\n  return {\r\n    type: \"UPDATE_ACCOUNT\",\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const connect = () => {\r\n  return async (dispatch) => {\r\n    dispatch(connectRequest());\r\n    const abiResponse = await fetch(\"/config/abi.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const abi = await abiResponse.json();\r\n    const configResponse = await fetch(\"/config/config.json\", {\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Accept: \"application/json\",\r\n      },\r\n    });\r\n    const CONFIG = await configResponse.json();\r\n    const { ethereum } = window;\r\n    const metamaskIsInstalled = ethereum && ethereum.isMetaMask;\r\n    if (metamaskIsInstalled) {\r\n      Web3EthContract.setProvider(ethereum);\r\n      let web3 = new Web3(ethereum);\r\n      try {\r\n        const accounts = await ethereum.request({\r\n          method: \"eth_requestAccounts\",\r\n        });\r\n        const networkId = await ethereum.request({\r\n          method: \"net_version\",\r\n        });\r\n        if (networkId == CONFIG.NETWORK.ID) {\r\n          const SmartContractObj = new Web3EthContract(\r\n            abi,\r\n            CONFIG.CONTRACT_ADDRESS\r\n          );\r\n          dispatch(\r\n            connectSuccess({\r\n              account: accounts[0],\r\n              smartContract: SmartContractObj,\r\n              web3: web3,\r\n            })\r\n          );\r\n          // Add listeners start\r\n          ethereum.on(\"accountsChanged\", (accounts) => {\r\n            dispatch(updateAccount(accounts[0]));\r\n          });\r\n          ethereum.on(\"chainChanged\", () => {\r\n            window.location.reload();\r\n          });\r\n          // Add listeners end\r\n        } else {\r\n          dispatch(connectFailed(`Change network to ${CONFIG.NETWORK.NAME}.`));\r\n        }\r\n      } catch (err) {\r\n        dispatch(connectFailed(\"Something went wrong.\"));\r\n      }\r\n    } else {\r\n      dispatch(connectFailed(\"Install Metamask.\"));\r\n    }\r\n  };\r\n};\r\n\r\nexport const updateAccount = (account) => {\r\n  return async (dispatch) => {\r\n    dispatch(updateAccountRequest({ account: account }));\r\n    dispatch(fetchData(account));\r\n  };\r\n};\r\n","import styled from \"styled-components\";\r\n\r\n// Used for wrapping a page component\r\nexport const Screen = styled.div`\r\n  background-color: var(--primary);\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerXSmall = styled.div`\r\n  height: 8px;\r\n  width: 8px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerSmall = styled.div`\r\n  height: 16px;\r\n  width: 16px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerMedium = styled.div`\r\n  height: 24px;\r\n  width: 24px;\r\n`;\r\n\r\n// Used for providing space between components\r\nexport const SpacerLarge = styled.div`\r\n  height: 32px;\r\n  width: 32px;\r\n`;\r\n\r\n// Used for providing a wrapper around a component\r\nexport const Container = styled.div`\r\n  display: flex;\r\n  flex: ${({ flex }) => (flex ? flex : 0)};\r\n  flex-direction: ${({ fd }) => (fd ? fd : \"column\")};\r\n  justify-content: ${({ jc }) => (jc ? jc : \"flex-start\")};\r\n  align-items: ${({ ai }) => (ai ? ai : \"flex-start\")};\r\n  background-color: ${({ test }) => (test ? \"pink\" : \"none\")};\r\n  width: 100%;\r\n  background-image: ${({ image }) => (image ? `url(${image})` : \"none\")};\r\n  background-size: cover;\r\n  background-position: center;\r\n`;\r\n\r\nexport const TextTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 22px;\r\n  font-weight: 500;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextSubTitle = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 18px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const TextDescription = styled.p`\r\n  color: var(--primary-text);\r\n  font-size: 16px;\r\n  line-height: 1.6;\r\n`;\r\n\r\nexport const StyledClickable = styled.div`\r\n  :active {\r\n    opacity: 0.6;\r\n  }\r\n`;\r\n","import React, { useEffect, useState, useRef } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { connect } from \"./redux/blockchain/blockchainActions\";\nimport { fetchData } from \"./redux/data/dataActions\";\nimport * as s from \"./styles/globalStyles\";\nimport styled from \"styled-components\";\n\nconst truncate = (input, len) =>\n  input.length > len ? `${input.substring(0, len)}...` : input;\n\nexport const StyledButton = styled.button`\n  padding: 10px;\n  border-radius: 12px;\n  background-color: var(--primary);\n  border: 4px solid var(--secondary);\n  padding: 16px;\n  font-size: 32px;\n  font-family: mat_salehregular;\n  color: var(--primary-text);\n  width: 100%;\n  cursor: pointer;\n  box-shadow: 6px 6px var(--secondary);\n`;\n\nexport const StyledRoundButton = styled.button`\n  padding: 10px;\n  border-radius: 100px;\n  background-color: var(--primary);\n  border: 4px solid var(--secondary);\n  padding: 0px 0px 0px 0px;\n  font-weight: bold;\n  font-size: 32px;\n  color: var(--primary-text);\n  width: 12px;\n  height: 12px;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  }\n`;\n\nexport const ResponsiveWrapper = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  justify-content: stretched;\n  align-items: stretched;\n  width: 100%;\n  @media (min-width: 67px) {\n    flex-direction: row;\n  }\n`;\n\nexport const StyledLogo = styled.img`\n  width: 300px;\n  @media (min-width: 767px) {\n    width: 700px;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledLogoFooter = styled.img`\n  width: 200px;\n  @media (min-width: 767px) {\n    width: 240x;\n  }\n  transition: width 0.5s;\n  transition: height 0.5s;\n`;\n\nexport const StyledImg = styled.img`\n  box-shadow: 0px 5px 11px 2px rgba(0, 0, 0, 0.7);\n  border: 4px dashed var(--secondary);\n  background-color: var(--accent);\n  border-radius: 100%;\n  width: 200px;\n  @media (min-width: 900px) {\n    width: 250px;\n  }\n  @media (min-width: 1000px) {\n    width: 300px;\n  }\n  transition: width 0.5s;\n`;\n\nexport const StyledLink = styled.a`\n  color: var(--secondary);\n  text-decoration: none;\n`;\n\nfunction App() {\n  const dispatch = useDispatch();\n  const blockchain = useSelector((state) => state.blockchain);\n  const data = useSelector((state) => state.data);\n  const [claimingNft, setClaimingNft] = useState(false);\n  const [feedback, setFeedback] = useState(`CLICK BUY TO MINT YOUR NFT`);\n  const [mintAmount, setMintAmount] = useState(1);\n  const [CONFIG, SET_CONFIG] = useState({\n    CONTRACT_ADDRESS: \"\",\n    SCAN_LINK: \"\",\n    NETWORK: {\n      NAME: \"\",\n      SYMBOL: \"\",\n      ID: 0,\n    },\n    NFT_NAME: \"\",\n    SYMBOL: \"\",\n    MAX_SUPPLY: 1,\n    WEI_COST: 0,\n    DISPLAY_COST: 0,\n    GAS_LIMIT: 0,\n    MARKETPLACE: \"\",\n    MARKETPLACE_LINK: \"\",\n    SHOW_BACKGROUND: false,\n  });\n\n  const claimNFTs = () => {\n    let cost = CONFIG.WEI_COST;\n    let gasLimit = CONFIG.GAS_LIMIT;\n    let totalCostWei = String(cost * mintAmount);\n    let totalGasLimit = String(gasLimit * mintAmount);\n    console.log(\"Cost: \", totalCostWei);\n    console.log(\"Gas limit: \", totalGasLimit);\n    setFeedback(`MINTING YOUR ${CONFIG.NFT_NAME}...`);\n    setClaimingNft(true);\n    blockchain.smartContract.methods\n      .mint(mintAmount)\n      .send({\n        gasLimit: String(totalGasLimit),\n        to: CONFIG.CONTRACT_ADDRESS,\n        from: blockchain.account,\n        value: totalCostWei,\n      })\n      .once(\"error\", (err) => {\n        console.log(err);\n        setFeedback(\"SORRY, SOMETHING WENT WRONG PLEASE TRY AGAIN LATER\");\n        setClaimingNft(false);\n      })\n      .then((receipt) => {\n        console.log(receipt);\n        setFeedback(\n          `WOW, THE ${CONFIG.NFT_NAME} IS YOUR! GO VISIT OPENSEA.IO TO VIEW IT.`\n        );\n        setClaimingNft(false);\n        dispatch(fetchData(blockchain.account));\n      });\n  };\n\n  const decrementMintAmount = () => {\n    let newMintAmount = mintAmount - 1;\n    if (newMintAmount < 1) {\n      newMintAmount = 1;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const incrementMintAmount = () => {\n    let newMintAmount = mintAmount + 1;\n    if (newMintAmount > 20) {\n      newMintAmount = 20;\n    }\n    setMintAmount(newMintAmount);\n  };\n\n  const getData = () => {\n    if (blockchain.account !== \"\" && blockchain.smartContract !== null) {\n      dispatch(fetchData(blockchain.account));\n    }\n  };\n\n  const getConfig = async () => {\n    const configResponse = await fetch(\"/config/config.json\", {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n      },\n    });\n    const config = await configResponse.json();\n    SET_CONFIG(config);\n  };\n\n  useEffect(() => {\n    getConfig();\n  }, []);\n\n  useEffect(() => {\n    getData();\n  }, [blockchain.account]);\n\n  return (\n    <s.Screen>\n      <s.Container\n        flex={1}\n        ai={\"center\"}\n        style={{ padding: \"90px 0px 0px 0px\", backgroundColor: \"var(--primary)\" }}\n        image={CONFIG.SHOW_BACKGROUND ? \"/config/images/bg.png\" : null}\n      >\n\n        <ResponsiveWrapper flex={1} style={{marginBottom:160}}>\n\n        <s.Container\n          flex={4}\n          jc={\"center\"}\n          ai={\"center\"}\n          style={{\n            background: \"\",\n            height: \"200px\"\n            \n          }}\n        >\n          <StyledLogo alt={\"logo\"} src={\"/config/images/logo.png\"} />\n        </s.Container>\n\n        </ResponsiveWrapper>\n\n        <s.SpacerMedium />\n        \n        <ResponsiveWrapper flex={1} style={{ padding: 14, background: \"var(--secondary)\" }} test>\n\n          <s.Container flex={1}></s.Container>\n\n          <s.Container\n            flex={2}\n            jc={\"center\"}\n            ai={\"center\"}\n            style={{\n              backgroundColor: \"var(--accent)\",\n              padding: 20,\n              borderRadius: 24,\n              marginTop: \"-100px\",\n              border: \"5px solid var(--primary)\",\n              boxShadow: \"0px 0px var(--primary)\",\n            }}\n          >\n            <s.TextTitle \n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n                fontSize: 60\n              }}>\n                GET YOUR Lil Billie Now!\n            </s.TextTitle>\n\n            <s.SpacerMedium/>\n\n            <s.TextSubTitle\n              style={{\n                textAlign: \"center\",\n                color: \"var(--primary-text)\",\n              }}>\n                Little Billionaires Club is a hand-drawn collection of 10,000 NFTs on the Polygon network.\n                 Minted Little Billionaires will be revealed once you get them\n            </s.TextSubTitle>\n\n            <s.SpacerLarge/><s.SpacerLarge/>\n\n            <s.TextSubTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 44,\n                color: \"var(--primary-text)\",\n              }}\n            >\n             Minted : {data.totalSupply}  /  {CONFIG.MAX_SUPPLY} \n            </s.TextSubTitle>\n\n            <s.TextSubTitle\n              style={{\n                textAlign: \"center\",\n                fontSize: 22,\n                color: \"var(--primary-text)\",\n              }}\n            >\n              1 {CONFIG.SYMBOL} Costs {CONFIG.DISPLAY_COST}{\" \"}\n                  {CONFIG.NETWORK.SYMBOL} \n            </s.TextSubTitle>\n\n            <s.SpacerSmall />\n            {Number(data.totalSupply) >= CONFIG.MAX_SUPPLY ? (\n              <>\n                <s.TextTitle\n                  style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n                >\n                  THE SALE HAS ENDED\n                </s.TextTitle>\n                <s.TextDescription\n                  style={{ textAlign: \"center\", color: \"var(--primary-text)\" }}\n                >\n                  YOU CAN STILL FIND {CONFIG.NFT_NAME} ON\n                </s.TextDescription>\n                <s.SpacerSmall />\n                <StyledLink target={\"_blank\"} href={CONFIG.MARKETPLACE_LINK}>\n                  {CONFIG.MARKETPLACE}\n                </StyledLink>\n              </>\n            ) : (\n              <>\n                <s.SpacerSmall />\n                {blockchain.account === \"\" ||\n                blockchain.smartContract === null ? (\n                  <s.Container ai={\"center\"} jc={\"center\"}>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--primary-text)\",\n                      }}\n                    >\n                      Connect to  {CONFIG.NETWORK.NAME} Network\n                    </s.TextDescription>\n                    <s.SpacerSmall />\n                    <StyledButton\n                      onClick={(e) => {\n                        e.preventDefault();\n                        dispatch(connect());\n                        getData();\n                      }}\n                    >\n                      Connect\n                    </StyledButton>\n                    {blockchain.errorMsg !== \"\" ? (\n                      <>\n                        <s.SpacerSmall />\n                        <s.TextDescription\n                          style={{\n                            textAlign: \"center\",\n                            color: \"var(--primary-text)\",\n                          }}\n                        >\n                          {blockchain.errorMsg}\n                        </s.TextDescription>\n                      </>\n                    ) : null}\n                  </s.Container>\n                ) : (\n                  <>\n                    <s.TextDescription\n                      style={{\n                        textAlign: \"center\",\n                        color: \"var(--primary-text)\",\n                      }}\n                    >\n                      {feedback}\n                    </s.TextDescription>\n                    <s.SpacerMedium />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledRoundButton\n                        style={{ lineHeight: 0.4 }}\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          decrementMintAmount();\n                        }}\n                      >\n                        -\n                      </StyledRoundButton>\n                      <s.SpacerMedium />\n                      <s.TextTitle\n                        style={{\n                          textAlign: \"center\",\n                          color: \"var(--primary-text)\",\n                          fontSize: 32,\n                        }}\n                      >\n                        {mintAmount}\n                      </s.TextTitle>\n                      <s.SpacerMedium />\n                      <StyledRoundButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          incrementMintAmount();\n                        }}\n                      >\n                        +\n                      </StyledRoundButton>\n                    </s.Container>\n                    <s.SpacerSmall />\n                    <s.Container ai={\"center\"} jc={\"center\"} fd={\"row\"}>\n                      <StyledButton\n                        disabled={claimingNft ? 1 : 0}\n                        onClick={(e) => {\n                          e.preventDefault();\n                          claimNFTs();\n                          getData();\n                        }}\n                      >\n                        {claimingNft ? \"MINTING\" : \"BUY\"}\n                      </StyledButton>\n                    </s.Container>\n                  </>\n                )}\n              </>\n            )}\n            <s.SpacerMedium />\n          </s.Container>\n\n          <s.Container flex={1}></s.Container>\n\n        </ResponsiveWrapper>\n\n        <ResponsiveWrapper flex={1} style={{ background: \"var(--secondary)\" }}>\n\n        <s.Container flex={1}></s.Container>\n\n        <s.Container\n          flex={2}\n          jc={\"left\"}\n          ai={\"left\"}\n        >\n          <s.SpacerLarge/><s.SpacerLarge/>\n\n          <s.TextTitle\n              style={{\n                textAlign: \"left\",\n                color: \"var(--accent-text)\",\n                fontSize: 40,\n                padding: \"0px 24px\"\n              }}\n            >\n              NOTES !\n            </s.TextTitle>\n\n            <s.SpacerLarge/>\n        </s.Container>\n\n        <s.Container flex={1}></s.Container>\n\n        </ResponsiveWrapper>\n\n        <ResponsiveWrapper flex={1} style={{ background: \"var(--secondary)\" }}>\n\n        <s.Container flex={1}></s.Container>\n\n        <s.Container\n          flex={2}\n          jc={\"left\"}\n          ai={\"left\"}\n        >\n       <s.TextSubTitle\n              style={{\n                textAlign: \"left\",\n                color: \"var(--accent-text)\",\n                padding: \"0px 24px\"\n              }}>\n              PLEASE MAKE SURE YOU ARE CONNECTED TO THE RIGHT NETWORK (\n              {CONFIG.NETWORK.NAME} MAINNET) AND THE CORRECT ADDRESS. PLEASE NOTE:\n              ONCE YOU MAKE THE PURCHASE, YOU CANNOT UNDO THIS ACTION.\n              WE HAVE SET THE GAS LIMIT TO 285000 FOR THE CONTRACT SUCCESSFULLY MINT YOUR NFT.\n              WE RECOMMEND THAT YOU DON'T LOWER THE GAS LIMIT\n            </s.TextSubTitle>\n\n            <s.SpacerLarge/>\n        </s.Container>\n\n        <s.Container flex={1}></s.Container>\n\n        </ResponsiveWrapper>\n\n        <ResponsiveWrapper flex={1} style={{ background: \"var(--secondary)\" }}>\n\n        <s.Container flex={1}></s.Container>\n\n        <s.Container\n          flex={2}\n          jc={\"left\"}\n          ai={\"left\"}\n        >\n          <StyledLogoFooter alt={\"logo\"} style={{ padding: \"0px 24px\" }} src={\"/config/images/logo.png\"} />\n\n          <s.SpacerXSmall/>\n\n          <s.TextDescription\n          style={{\n            color: \"var(--accent-text)\",\n            padding: \"0px 4px\"}}>\n              Copyright © 2021 Lil Billionaires Club \n            <a\n            style={{\n              textDecoration: \"none\",\n              color: \"var(--primary-text)\",\n              backgroundColor: \"var(--primary)\",\n              padding: \"4px 8px\",\n              borderRadius: \"4px\",\n              margin: \"0px 4px 0px 8px\",\n            }}\n            target={\"_blank\"} href={\"https://twitter.com/LilbillieNft\"}>Twitter\n            </a>\n            <a\n            style={{\n              textDecoration: \"none\",\n              color: \"var(--primary-text)\",\n              backgroundColor: \"var(--primary)\",\n              padding: \"4px 8px\",\n              margin: \"0px 8px 0px 4px\",\n              borderRadius: \"4px\",\n            }}\n            target={\"_blank\"} href={\"https://opensea.io/collection/lil-billionaires-club\"}>OpenSea\n            </a>\n            <a\n            style={{\n              textDecoration: \"none\",\n              color: \"var(--primary-text)\",\n              backgroundColor: \"var(--primary)\",\n              padding: \"4px 8px\",\n              borderRadius: \"4px\",\n            }}\n            target={\"_blank\"} href={CONFIG.SCAN_LINK}>Smart Contract\n            </a>\n            <a\n            style={{\n              textDecoration: \"none\",\n              color: \"var(--primary-text)\",\n              backgroundColor: \"var(--primary)\",\n              padding: \"4px 8px\",\n              borderRadius: \"4px\",\n              margin: \"0px 4px 0px 8px\",\n            }}\n            target={\"_blank\"} href={\"https://littlebillie.github.io/config/roadmap.pdf\"}>Roadmap\n            </a>\n          </s.TextDescription>\n\n            <s.SpacerLarge/>\n        </s.Container>\n\n        <s.Container flex={1}></s.Container>\n\n        </ResponsiveWrapper>\n       \n\n        \n\n      </s.Container>\n    </s.Screen>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport store from \"./redux/store\";\r\nimport { Provider } from \"react-redux\";\r\nimport \"./styles/reset.css\";\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}